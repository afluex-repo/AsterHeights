@model AsterHeight.Models.Plot
@{
    ViewBag.Title = "PlotRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("PlotRegistration", "Plot", FormMethod.Post, new { @id = "form1" }))
{
    <section class="section">
        <ul class="breadcrumb breadcrumb-style ">
            <li class="breadcrumb-item">
                <a href="#">
                    <i data-feather="home"></i>
                </a>
            </li>
            <li class="breadcrumb-item">Plot</li>
            <li class="breadcrumb-item">Plot Registration</li>
        </ul>
    </section>
    <div class="section-body">
        <div class="col-12 col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4>Plot Registration</h4>

                    <p style="color: red">
                        @TempData["PlotRegistration"]
                    </p>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Sponsor ID<span style="color:red">*</span>
                                @if (Model.UserID == null)
                                {
                                    @Html.TextBoxFor(m => m.SponsorID, new { @class = "form-control", @Placeholder = "Sponsor ID", @onchange = "return getSponsorName();" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.SponsorID, new { @class = "form-control", @Placeholder = "Sponsor ID", @readonly = "readonly" })
                                }
                                @Html.HiddenFor(m => m.UserID)
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Sponsor Name <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.SponsorName, new { @class = "form-control", @Placeholder = "Sponsor Name", @readonly = "true" })
                            </div>
                        </div>
                        <div class="input-field col m3 s12">
                            <div class="form-group">
                                Leg <span style="color: red">*</span> &nbsp;&nbsp;
                                <input type="radio" value="L" checked="checked" id="left" name="Leg" />
                                Left &nbsp;&nbsp;
                                <input type="radio" value="R" id="right" name="Leg" />
                                Right
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                First Name <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @Placeholder = "First Name" })

                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Last Name
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @Placeholder = "Last Name" })

                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Mobile <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @Placeholder = "Mobile", onkeypress = "return isNumberOrDecimal(event);", @maxlength = "10" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m3 s12">
                            <div class="form-group">
                                Email Id
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @Placeholder = "Email id" })
                            </div>
                        </div>
                        <div class="input-field col m3 s12">
                            <div class="form-group">
                                Gender
                                @Html.DropDownListFor(m => m.Gender, new SelectList(ViewBag.ddlgender, "Value", "Text"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Pan Card
                                @Html.TextBoxFor(m => m.PanCard, new { @class = "form-control", @Placeholder = "Pan Card", @Maxlength = "10"/*, @onchange = "return validatepan(event);"*/})
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Address
                                @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @Placeholder = "Address" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Select Branch <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.BranchID, new SelectList(ViewBag.ddlBranch, "Value", "Text"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Select Site <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.SiteID, new SelectList(ViewBag.ddlSite, "Value", "Text"), new { @class = "form-control", @onchange = "return onSiteChange();" })
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Select Phase <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.SectorID, new SelectList(ViewBag.ddlSector, "Value", "Text"), new { @class = "form-control", @onchange = "return onSectorChange();" })
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Select Block <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.BlockID, new SelectList(ViewBag.ddlBlock, "Value", "Text"), new { @class = "form-control", @onchange = "return onChangeBlock();" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                Plot Number <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.PlotNumber, new { @class = "form-control", @Placeholder = "Plot Number", @onchange = "return CheckPlotStatus();", @style = "text-transform:uppercase" })
                                @Html.HiddenFor(m => m.PlotID)
                                @Html.HiddenFor(m => m.PlotSize)
                                @Html.HiddenFor(m => m.BookingPercent)
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Actual Plot Amount <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.PlotAmount, new { @class = "form-control", @Placeholder = "Actual Plot Amount", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Actual Plot Rate <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.ActualPlotRate, new { @class = "form-control", @Placeholder = "Actual Plot Rate", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Plot Rate <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.PlotRate, new { @class = "form-control", @maxlength = "6", @Placeholder = "Plot Rate", @onchange = "return calculatePlotAmount();", onkeypress = "return isNumberOrDecimal(event);" })
                            </div>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-3" style="display:none">
                            <div class="form-group">
                                PLC Percentage <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.PLC, new SelectList(ViewBag.ddlPLC, "Value", "Text"), new { @class = "form-control", @onchange = "return CalculatePLC();" })
                            </div>
                        </div> 
                        <div class="col-md-3"  style="display:none">
                            <div class="form-group">
                                Total PLC <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.TotalPLC, new { @class = "form-control", @Placeholder = "TotalPLC", @onchange = "return calculatePlotAmount()", onkeypress = "return isNumberOrDecimal(event);", @Readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                NetPlotAmount<span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.NetPlotAmount, new { @class = "form-control", @Placeholder = "Net Plot Amount", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Payment Plan <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.PaymentPlanID, new SelectList(ViewBag.ddlPlan, "Value", "Text"), new { @class = "form-control", @onchange = "return Flexi();" })
                            </div>
                        </div>
                        <div class="col-md-3" id="emi">
                            <div class="form-group">
                                No. Of EMI
                                @Html.TextBoxFor(m => m.NoOfEMI, new { @class = "form-control", @maxlength = "8", @Placeholder = "No. Of EMI", @onkeypress = "return isNumberOrDecimal(event);" })
                            </div>
                        </div>
                        <div class="col-md-3" hidden="hidden">
                            <div class="form-group">
                                Booking Amount <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.BookingAmount, new { @class = "form-control", @maxlength = "8", @Placeholder = "BookingAmount", @onkeypress = "return isNumberOrDecimal(event);", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Booking Date <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.BookingDate, new { @class = "form-control", @Placeholder = "Booking Date", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                Discount (In Amount)
                                @Html.TextBoxFor(m => m.Discount, new { @class = "form-control", @Placeholder = "Discount", @onchange = "return checkDiscount()", @onkeypress = "return isNumberOrDecimal(event);", @maxlength = "10" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Pay Amount <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.PayAmount, new { @class = "form-control", @Placeholder = "PayAmount", onkeypress = "return isNumberOrDecimal(event);", @onchange = "return validatePayAmount();" })
                            </div>
                        </div>
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Remaining Amount <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.Balance, new { @class = "form-control", @Placeholder = "Remaining Amount", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3" id="divpaymentmode">
                            <div class="form-group">
                                Payment Date <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.PaymentDate, new { @class = "form-control", @Placeholder = "Payment Date", @Readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        
                        <div class="col-md-3" id="divpaymentmode">
                            <div class="form-group">
                                Payment Mode <span style="color: red">*</span>
                                @Html.DropDownListFor(m => m.PaymentMode, new SelectList(ViewBag.ddlpaymentmode, "Value", "Text"), new { @class = "form-control", @onchange = "return CheckPayMode()" })
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divtransactiono" style="display: none">
                            <div class="form-group">
                                <span id="txnNo"></span> <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.TransactionNo, new { @class = "form-control", @Placeholder = "Cheque/Transaction Number", @maxlength = "50" })
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divAssociateId" style="display: none">
                            <div class="form-group">
                                <span id="txnAssociateId"></span> <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.AssociateLoginID, new { @class = "form-control", @Placeholder = "Associate Id", @maxlength = "50", @onchange = "return getAssociateName();" })
                                @Html.HiddenFor(m => m.AssociateID)
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divAssociateName" style="display: none">
                            <div class="form-group">
                                <span id="txnAssociateName"></span> <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.AssociateName, new { @class = "form-control", @Placeholder = "Associate Name", @maxlength = "50", @readonly = "true" })
                            </div>
                        </div>
                        <div class="col-md-3" id="divbookingno" style="display: none">
                            <div class="form-group">
                                Reference Booking No. <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.BookingNo, new { @class = "form-control", @onchange = "checkBookingNo(this);" })
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divPaymentDate" style="display: none">
                            <div class="form-group">
                                <span id="txndt"></span><span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control", @Placeholder = "Cheque/Transaction Date", @Readonly = "readonly" })
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divbankname" style="display: none">
                            <div class="form-group">
                                Bank Name <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @maxlength = "100", @Placeholder = "Bank Name" })
                            </div>
                        </div>
                        <div class="input-field col-md-3" id="divbankbranch" style="display: none">
                            <div class="form-group">
                                Bank Branch <span style="color: red">*</span>
                                @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", @maxlength = "100", @Placeholder = "Bank Branch" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                Remark (If any)
                                @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", @Placeholder = "Remark" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m4 s12">
                            <div class="form-group">
                                    <input class="btn btn-success pull-right" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="Save" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">
<script>
    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
        $("#NoOfEMI").prop('disabled', true);
        $('#TotalPLC').val(0);
    });
    function CalculatePLC() {
        var NetAmount = $('#NetPlotAmount').val();
        var PLC = $('#PLC').val();
        var actualAmount = $('#PlotAmount').val();
        //alert(PLC)
        if ($('#PLC').val() == 0) {
            $('#TotalPLC').val(0);
            $('#NetPlotAmount').val(actualAmount);
        }
        else {
            var TotalPLC = (Number(actualAmount) * Number(PLC) / 100).toFixed(2);
            //var TotalPLC = Math.round((actualAmount * PLC) * 1e12) / 100;
            $('#TotalPLC').val(TotalPLC);
            var NetAmount = (Number(actualAmount) + Number(TotalPLC)).toFixed(2);
            $('#NetPlotAmount').val(NetAmount);
        }
    }
    function Flexi() {
        debugger
        //alert($('#PaymentPlanID').val())
        var actualAmount = $('#PlotAmount').val();
        if ($('#PaymentPlanID').val() == 1) {
            var Discount = ((actualAmount * 10) / 100).toFixed(2);
            $('#Discount').val(Discount);
            $("#NoOfEMI").prop('disabled', true);
        }
        else if ($('#PaymentPlanID').val() == 3) {
            $("#NoOfEMI").prop('disabled', false);
            $('#Discount').val(0).toFixed(2);
        }

        else {
            $('#Discount').val(0).toFixed(2);
            $("#NoOfEMI").prop('disabled', true);
        }
    }
    //function SetDiscount() {
    //    var ActualPlotAmt = $('#PlotAmount').val();
    //    var Discount = Number($('#Discount').val());
    //    if ($('#PaymentPlanID').val() == 1) {
    //        var Discount = (ActualPlotAmt * 10) / 100;
    //    }
    //    else {
    //        $("#NoOfEMI").prop('disabled', true);
    //    }
    //}

    function calculatePlotAmount() {
        var plotSize = $('#PlotSize').val();
        var plotRate = $('#PlotRate').val();
      
        var bookingPercent = $('#BookingPercent').val();
        var plc = $('#TotalPLC').val();
        var actplotamt = $('#PlotAmount').val();

        var plotAmount = (Number)(plotSize) * (Number)(plotRate);

        var bookingAmount = plotAmount * bookingPercent / 100;
        if ($('#TotalPLC').val() == "0" || $('#TotalPLC').val() == "" || $('#TotalPLC').val() == "0.00") {
            $("#NetPlotAmount").val(plotAmount);

        }
        else {
            var actplotamtplc = (Number)(plotAmount) + (Number)(plc);
            $("#NetPlotAmount").val(actplotamtplc);
        }

        $("#Discount").val(0);
        $("#PayAmount").val(0);
        $("#Balance").val(0);

        $("#BookingAmount").val(bookingAmount);
    }
    function onChangeBlock() {
        //if($('#BlockID').val()=="0")
        //{
            $("#PlotNumber").addClass('errortext');
            $("#PlotNumber").val('');
            $("#PlotAmount").val('');
            $("#ActualPlotRate").val('');
            $("#BookingAmount").val('');
            $("#TotalPLC").val('');
            $("#PlotAmount").val('');
            $("#NetPlotAmount").val('');
            $("#PlotRate").val('');
        //}
    }
  

    function validatePayAmount() {
        debugger
        var payAmount = $('#PayAmount').val();
        var actualAmount = $('#PlotAmount').val();
        var disc = $('#Discount').val();


        var NetPlotAmount = $('#NetPlotAmount').val();
        var remaining = (Number)(NetPlotAmount) - (Number)(payAmount);
        $("#Balance").val(remaining);

        if ((Number)(payAmount) > ((Number)(NetPlotAmount))) {
            $("#PayAmount").addClass('errortext');
            $('#PayAmount').focus();
            $("#PayAmount").val('');
            $("#Balance").val(0);
            alert("Pay Amount cannot be greater than Actual Plot Amount ");
            return false;
        }
        else if (parseFloat(payAmount) < 5000) {
            alert("Amount should not be minimum than 5000 rs.")
            $("#PayAmount").addClass('errortext');
            $("#PayAmount").focus();
            $("#PayAmount").val('');
            $("#Balance").val(0);
            return false;
        }

        else {
            $("#PayAmount").removeClass('errortext');
            return true;
        }

    }

    function checkDiscount() {
        //alert("Called");
        var discount = $('#Discount').val();
        var actualAmount = $('#PlotAmount').val();
        var disc = $('#Discount').val();
        var plc = $('#TotalPLC').val();
        //if ($('#PaymentPlanID').val() == 1) {
        //    //alert(actualAmount)
        //    $("#Discount").removeClass('errortext');
        //    var Discount = (actualAmount * 10) / 100;
        //    $('#Discount').val(Discount);
        //}
        //else
        if ((Number)(discount) > (Number)(actualAmount)) {
            $("#Discount").addClass('errortext');
            $('#Discount').focus();
            $("#Discount").val('');
            alert("Discount cannot be greater than Actual Plot Amount.");
            return false;
        }
        else {
            debugger;
            var payAmount = $('#PayAmount').val();
            var actualAmount = $('#PlotAmount').val();
            var disc = $('#Discount').val();


            var NetPlotAmount = $('#NetPlotAmount').val();

            var amount = Number($('#NetPlotAmount').val()) - Number(disc);
            $('#NetPlotAmount').val(amount);

            if ($('#PayAmount').val() != "") {
                var payamount = Number($('#PayAmount').val()) - Number(disc);
                $('#PayAmount').val(payamount);
            }
            $("#PayAmount").val(0);
            $("#Balance").val(0);

        }
    }
    function getStateCity() {
        var pincode = $('#Pincode').val();
        $.ajax({
            url: '/Master/GetStateCity', type: 'post', dataType: 'json',
            data: { 'Pincode': pincode },
            success: function (data) {
                if (data.Result == "yes") {
                    $("#State").val(data.State);
                    $("#City").val(data.City);
                    $("#State").removeClass('errortext');
                    $("#City").removeClass('errortext');
                    $("#Pincode").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    $("#State").val('');
                    $("#City").val('');
                    $("#State").addClass('errortext');
                    $("#City").addClass('errortext');
                    $("#Pincode").addClass('errortext');
                    $('#Pincode').focus();
                }
            }

        });
    }
    function validateform() {
        $(".errortext").removeClass("errortext");
        if ($('#SponsorID').val() == '') {
            $("#SponsorID").addClass('errortext');
            $('#SponsorID').focus();
            return false;
        }
        if ($('#FirstName').val() == '') {
            $("#FirstName").addClass('errortext');
            $('#FirstName').focus();
            return false;
        }

        if ($('#Mobile').val() == '') {
            $("#Mobile").addClass('errortext');
            $('#Mobile').focus();
            return false;
        }
        if ($('#SiteID').val() == '0') {
            $("#SiteID").addClass('errortext');
            $('#SiteID').focus();
            return false;
        }

        if ($('#SectorID').val() == '0') {
            $("#SectorID").addClass('errortext');
            $('#SectorID').focus();
            return false;
        }
        if ($('#BlockID').val() == '0') {
            $("#BlockID").addClass('errortext');
            $('#BlockID').focus();
            return false;
        }
        if ($('#PlotNumber').val() == '') {
            $("#PlotNumber").addClass('errortext');
            $('#PlotNumber').focus();
            return false;
        }
        if ($('#PlotAmount').val() == '') {
            $("#PlotAmount").addClass('errortext');
            $('#PlotAmount').focus();
            return false;
        }

        if ($('#ActualPlotRate').val() == '') {
            $("#ActualPlotRate").addClass('errortext');
            $('#ActualPlotRate').focus();
            return false;
        }
      
        if ($('#PlotRate').val() == '') {
            $("#PlotRate").addClass('errortext');
            $('#PlotRate').focus();
            return false;
        }
        //if ($('#PLC').val() == '0') {
        //    $("#PLC").addClass('errortext');
        //    $('#PLC').focus();
        //    return false;
        //}
        if ($('#TotalPLC').val() == '') {
            $("#TotalPLC").addClass('errortext');
            $('#TotalPLC').focus();
            return false;
        }
        if ($('#NetPlotAmount').val() == '') {
            $("#NetPlotAmount").addClass('errortext');
            $('#NetPlotAmount').focus();
            return false;
        }
        if ($('#PaymentPlanID').val() == '0') {
            $("#PaymentPlanID").addClass('errortext');
            $('#PaymentPlanID').focus();
            return false;
        }
        if ($('#BookingDate').val() == '') {
            $("#BookingDate").addClass('errortext');
            $('#BookingDate').focus();
            return false;
        }
        if ($('#PayAmount').val() == '') {
            $("#PayAmount").addClass('errortext');
            $('#PayAmount').focus();
            return false;
        }
        if ($('#Balance').val() == '') {
            $("#Balance").addClass('errortext');
            $('#Balance').focus();
            return false;
        }
     
        if ($('#PaymentDate').val() == '') {
            $("#PaymentDate").addClass('errortext');
            $('#PaymentDate').focus();
            return false;
        }
        var amount = $("#PayAmount").val();
        if (amount != null && amount != '' && amount != 0) {
            if ($("#PaymentMode").val() == '0') {
                $("#PaymentMode").addClass('errortext');
                $("#PaymentMode").focus();
                return false;
            }
        }
        return true;
    }
    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }
    function CheckPlotStatus() {
        debugger
        $("#divload").css({ 'display': '' });
        var siteID = $('#SiteID').val();
        var sectorID = $('#SectorID').val();
        var block = $('#BlockID').val();
        var plotno = $('#PlotNumber').val();

        $.ajax({
            url: '/Plot/CheckPlot', type: 'get', dataType: 'json',
            data: { 'SiteID': siteID, 'SectorID': sectorID, 'BlockID': block, 'PlotNumber': plotno },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#PlotNumber").removeClass('errortext');
                    $("#PlotID").val(data.PlotID);
                    $("#BookingPercent").val(data.BookingPercent);
                    $("#PlotSize").val(data.PlotSize);
                    $("#PlotAmount").val(data.PlotAmount);
                    $("#ActualPlotRate").val(data.ActualPlotRate);
                    $("#PlotRate").val(data.ActualPlotRate);
                    $("#BookingAmount").val(data.BookingAmount);
                    $("#TotalPLC").val(data.TotalPLC);
                    $("#NetPlotAmount").val(data.NetPlotAmount);
                }
                else if (data.Result == "no") {
                    alert('Invalid Plot Number !');
                    $("#PlotNumber").addClass('errortext');
                    $('#PlotNumber').focus();
                    $("#PlotNumber").val('');
                    $("#ActualPlotRate").val('');
                    $("#BookingAmount").val('');
                    $("#TotalPLC").val('');
                    $("#PlotAmount").val('');
                }
                else {
                    alert('Plot not available !');
                    $("#PlotNumber").addClass('errortext');
                    $("#PlotNumber").val('');
                    $("#PlotAmount").val('');
                    $("#ActualPlotRate").val('');
                    $("#BookingAmount").val('');
                    $("#TotalPLC").val('');
                    $("#PlotAmount").val('');
                }
            }

        });

    }
    //function CheckPlotStatus() {
    //    $("#divload").css({ 'display': '' });
    //    debugger
    //    var siteID = $('#SiteID').val();
    //    var sectorID = $('#SectorID').val();
    //    var block = $('#BlockID').val();
    //    var plotno = $('#PlotNumber').val();
    //    $.ajax({
    //        url: '/Plot/CheckPlot', type: 'get', dataType: 'json',
    //        data: { 'SiteID': siteID, 'SectorID': sectorID, 'BlockID': block, 'PlotNumber': plotno },
    //        success: function (data) {
    //            $("#divload").css({ 'display': 'none' });
    //            if (data.Result == "yes") {

    //                $("#PlotID").val(data.PlotID);
    //                $("#PlotAmount").val(data.PlotAmount);
    //                $("#ActualPlotRate").val(data.ActualPlotRate);
    //                $("#BookingAmount").val(data.BookingAmount);
    //                $("#TotalPLC").val(data.TotalPLC);
    //            }
    //            else {
    //                alert('Plot not available .');
    //                $("#PlotNumber").val('');
    //                $("#PlotAmount").val('');
    //                $("#ActualPlotRate").val('');
    //                $("#BookingAmount").val('');
    //                $("#TotalPLC").val('');

    //            }
    //        }

    //    });

    //}
    function CheckDate() {
        debugger
        var startDate = new Date($('#HoldFrom').val());
        var endDate = new Date($('#HoldTo').val());

        if (startDate > endDate) {
            alert("Hold To Date should be greater than Hold From Date");
            $('#HoldTo').val('');
        }

    }
    function CheckPayMode() {

        debugger
        if ($('#PaymentMode').val() == "2") {
            $('#txnNo').html('Cheque No.');
            $('#txndt').html('Cheque Date');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbankbranch").show();
            $("#divbookingno").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Cheque No.");
            $("#TransactionDate").attr("placeholder", "Cheque Date");
        }
        else if ($('#PaymentMode').val() == "3") {
            $('#txndt').html('NEFT Date');
            $('#txnNo').text('NEFT No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbankbranch").show();
            $("#divbookingno").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "NEFT No.");
            $("#TransactionDate").attr("placeholder", "NEFT Date");
        }

        else if ($('#PaymentMode').val() == "10") {
            $('#txndt').html('UPI Date');
            $('#txnNo').text('UPI Transaction No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbankbranch").show();
            $("#divbookingno").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "UPI Transaction No.");
            $("#TransactionDate").attr("placeholder", "UPI Date");
        }
        else if ($('#PaymentMode').val() == "11") {
            $('#txndt').html('Swap Date');
            $('#txnNo').text('Card Swap Transaction No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbookingno").hide();
            $("#divbankbranch").show();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Card Swap Transaction No.");
            $("#TransactionDate").attr("placeholder", "Swap Date");
        }
        else if ($('#PaymentMode').val() == "4") {
            $('#txndt').html('DD Date');
            $('#txnNo').text('DD No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbookingno").hide();
            $("#divbankbranch").show();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "DD No.");
            $("#TransactionDate").attr("placeholder", "DD Date");
        }
        else if ($('#PaymentMode').val() == "5") {
            $('#txndt').html('RTGS Date');
            $('#txnNo').text('RTGS No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").show();
            $("#divbookingno").hide();
            $("#divbankbranch").show();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "RTGS No.");
            $("#TransactionDate").attr("placeholder", "RTGS Date");
        }
        else if ($('#PaymentMode').val() == "7") {

            $('#txnNo').text('Mobile No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divbookingno").hide();
            $("#divPaymentMode").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Mobile No.");
        }
        else if ($('#PaymentMode').val() == "8") {

            $('#txnNo').text('Mobile No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divbookingno").hide();
            $("#divPaymentDate").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Mobile No.");
        }
        else if ($('#PaymentMode').val() == "9") {

            $('#txnNo').text('Mobile No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divbookingno").hide();
            $("#divPaymentDate").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Mobile No.");
        }
        else if ($('#PaymentMode').val() == "6") {

            $('#txnNo').text('Mobile No.');
            $("#divPaymentDate").show();
            $("#divtransactiono").show();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divbookingno").hide();
            $("#divPaymentDate").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
            $("#TransactionNumber").attr("placeholder", "Mobile No.");
        }
        else if ($('#PaymentMode').val() == "12") {
            $("#divPaymentDate").hide();
            $("#divbookingno").show();
            $("#divtransactiono").hide();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divPaymentDate").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
        }
        else if ($('#PaymentMode').val() == "13") {
            $('#txnAssociateId').html('Associate Id');
            $('#txnAssociateName').text('Associate Name');
            $("#divPaymentDate").hide();
            $("#divtransactiono").hide();
            $("#divbankname").hide();
            $("#divbookingno").hide();
            $("#divbankbranch").hide();
            $("#divAssociateId").show();
            $("#divAssociateName").show();
            $("#AssociateLoginID").attr("placeholder", "Associate Id");
            $("#AssociateName").attr("placeholder", "AssociateName");
        }
        else {
            $("#divPaymentDate").hide();
            $("#divtransactiono").hide();
            $("#divbankname").hide();
            $("#divbankbranch").hide();
            $("#divbookingno").hide();
            $("#divAssociateId").hide();
            $("#divAssociateName").hide();
        }
    }
    function getSponsorName() {
        $("#divload").css({ 'display': '' });
        var sponsorID = $('#SponsorID').val();
        $.ajax({
            url: '/Plot/GetAssociateName', type: 'post', dataType: 'json',
            data: { 'AssociateID': sponsorID },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#SponsorName").val(data.AssociateName);
                    $("#UserID").val(data.UserID);
                    $("#SponsorName").removeClass('errortext');
                    $("#SponsorID").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    alert("Invalid Sponsor ID");
                    $("#SponsorName").val('');
                    $("#SponsorName").addClass('errortext');
                    $("#SponsorID").addClass('errortext');
                    $('#SponsorID').focus();
                    $('#SponsorID').val('');

                }
            }
        });
    }
    function checkamount() {
        debugger;
        var amount = $("#Amount").val();
        if (parseFloat(amount) < 5000) {
            alert("Amount should not be minimum than 5000 rs.")
            $("#Amount").addClass('errortext');
            $("#Amount").focus();
        }
        else {
            $("#Amount").removeClass('errortext');
        }
    }
</script>
<script>
    $('#PaymentDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    $('#TransactionDate').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,
        minDate: new Date(new Date().setMonth(new Date().getMonth() - 2))
    });
    $('#BookingDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    //$('#TransactionDate').datepicker({
    //    dateFormat: 'dd/mm/yy',
    //});
    //$('#PaymentDate').datepicker({
    //    dateFormat: 'dd/mm/yy',
    //});
    //$('#BookingDate').datepicker({
    //    dateFormat: 'dd/mm/yy',
    //});
    //$('#BookingDate').datepicker({
    //    dateFormat: 'dd/mm/yy',
    //    //maxDate: 0,
    //    //changeYear: true,
    //    //changeMonth: true
    //});
</script>

<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>

<script>

    $('#HoldFrom').datepicker({
        format: 'dd/mm/yyyy',
        changeYear: true,
        changeMonth: true
    });
    $('#HoldTo').datepicker({
        format: 'dd/mm/yyyy',
        changeYear: true,
        changeMonth: true
    });


</script>
