@model AsterHeight.Models.Master

@{
    ViewBag.Title = "SectorMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SectorMaster", "Master", FormMethod.Post, new { @id = "form1" }))
{

    <section class="section">
        <ul class="breadcrumb breadcrumb-style ">
            <li class="breadcrumb-item">
                <a href="#">
                    <i data-feather="home"></i>
                </a>
            </li>
            <li class="breadcrumb-item">Master</li>
            <li class="breadcrumb-item">Sector Master</li>
        </ul>
    </section>


    <div class="section-body">
        <div class="col-12 col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4>Site Master</h4>

                    <p style="color: red">
                        @TempData["SectorMaster"]
                    </p>
                </div>
                <div class="card-body">
                    <div class="row ">
                        <div class="input-field col m6 s12">
                            Site Name<span style="color:red">*</span>
                            @Html.DropDownListFor(m => m.SiteID, new SelectList(ViewBag.ddlSite, "Value", "Text"), new { @class = "form-control" })
                        </div>

                        <div class="input-field col m6 s12">
                            Sector Name<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.SectorName, new { @class = "form-control", @Placeholder = "Sector Name" })
                        </div>

                    </div>

                    <br />
                    <div class="form-group row">

                        <div class="input-field col m6 s12">
                            @if (Model.SectorID == null)
                {
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                            }
                            else
                            {
                                @Html.HiddenFor(m => m.SectorID, new { @Value = @Model.SectorID })
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                            }
                            <a class="btn btn-info" href="/Master/SectorList" style="margin-left:5px">Back To List</a>
                        </div>


                    </div>



                </div>

            </div>
        </div>
    </div>

}


                <script>
                    function validateform() {
                        $(".errortext").removeClass("errortext");

                        if ($('#SiteID').val() == '0') {
                            $("#SiteID").addClass('errortext');
                            $('#SiteID').focus();
                            return false;
                        }
                        if ($('#SectorName').val() == '') {
                            $("#SectorName").addClass('errortext');
                            $('#SectorName').focus();
                            return false;
                        }


                        return true;
                    }

                    function isNumberOrDecimal(evt) {
                        var charCode = (evt.which) ? evt.which : evt.keyCode;
                        if (charCode != 46 && charCode > 31
                          && (charCode < 48 || charCode > 57))
                            return false;

                        return true;
                    }

                    function onlyAlphabets(e, t) {
                        try {
                            if (window.event) {
                                var charCode = window.event.keyCode;
                            }
                            else if (e) {
                                var charCode = e.which;
                            }
                            else { return true; }
                            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                                return true;
                            else
                                return false;
                        }
                        catch (err) {
                            alert(err.Description);
                        }
                    }

                </script>


                <style>
                    .errortext {
                        border: 1px solid red !important;
                        background-color: #fff0f0 !important;
                    }
                </style>
